# $t0 - gray
# $t1 - mask
# $t2 - bin

	.data
str1:	.asciiz "Introduza um numero: "
str2:	.asciiz "\nValor em codigo gray: "
str3:	.asciiz "\nValor em binario: "
	.eqv 	print_string,4
	.eqv 	read_int, 5
	.eqv 	print_int16, 1
	.text
	.globl 	main
	
main:	la 		$a0, str1		# dar load da str1	
	li 		$v0, print_string	# print "Introduza um numero: "
	syscall					#
	li		$v0, read_int		# ler valor do terminal
	syscall					#
	or		$t0, $0, $v0		# gray = read_int()
	srl		$t1, $t0, 1		# mask = gray >> 1
	move		$t2, $t0		# bin = gray
	
while:	beqz 		$t1, end		# while (mask != 0){
	xor		$t2, $t2, $t1		#	bin = bin ^ mask;
	srl		$t1, $t1, 1		#	mask = mask >> 1;
	j 		while			# }
	
end:	la		$a0, str2		# load str2
	li		$v0, print_string	# print "\nValor em codigo gray: "
	syscall					#
	move		$a0, $t0		# print_int = gray
	li		$v0, print_int16	#
	syscall					#
	la		$a0, str3		# load str3
	li		$v0, print_string	# print "\nValor em binario: "
	syscall					#
	move		$a0, $t2		# print_int = bin
	li		$v0, print_int16	#
	syscall					#	
	jr 		$ra			# fim do programa	