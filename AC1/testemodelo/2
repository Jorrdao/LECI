# Mapa de resgistos
# $t0 - i
# $t1 - v
# $t2 - SIZE/2
# $t3 - i * 4 
# $t4 - (i + SIZE/2)*4
# $t5 - aux1
# $t6 - aux2
# $t7 - v2

	.data
str1:	.asciiz	"Result is: "
	.eqv		SIZE, 8
	.eqv		print_int10, 1
	.eqv		print_string, 4
	.eqv		print_char, 11
val:	.word		8, 4, 15, -1987, 327, -9, 27, 16
	.text
	.globl main


main:		li	$t2, SIZE		# $t2 = SIZE
		srl	$t2, $t2, 1		# $t2 = SIZE/2"
		li	$t0, 0			# i = 0

do:		la	$t5, val		# do{ aux1 = &lista
		sll	$t3, $t0, 2		# 	i = i*4
		addu	$t5, $t5, $t3		# 	aux1 = &lista[i]
		lw	$t1, 0($t5)		# 	v = lista[i]

		la	$t6, val		# 	aux2 = &lista
		addu	$t4, $t0, $t2		# 	i+SIZE/2
		sll	$t4, $t4, 2		# 	(i+SIZE/2)*4
		addu	$t6, $t6, $t4		# 	aux2 = &lista[i+SIZE/2]
		lw	$t7, 0($t6)		# 	v2 = lista[i+SIZE/2]
		
		sw	$t1, 0($t6)		# 	v[i+SIZE/2] = v 
		sw	$t7, 0($t5)		# 	v[i] = v[i+SIZE/2]
		
		addi	$t0, $t0, 1		# 	i++
		blt	$t0, $t2, do		# }while(++i < (SIZE/2))

endw:		la	$a0, str1		# print(str1)
		li	$v0, print_string	#
		syscall				#
		li	$t0, 0			#

do2:		la	$t1, val		# do{ v = &lista
		sll	$t3, $t0, 2		# 	i = i*4
		addu	$t1, $t1, $t3		# 	v = lista[i]
		lw	$a0, 0($t1)		#
		li	$v0, print_int10	# 	print(val[i++])
		syscall				#
		li	$a0, ','		#
		li	$v0, print_char		# 	print(,)
		syscall				#
		addi	$t0, $t0, 1		# 	i++	
		blt	$t0, SIZE, do2		#	}while(i < SIZE)
		
end:		jr	$ra				# fim do programa
		
		